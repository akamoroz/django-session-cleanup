version: 2
workflows:
  version: 2
  build:
    jobs:
      - test-py2.7-dj1.11
      - test-py3.5-dj1.11
      - test-py3.5-dj2.0
      - test-py3.5-dj2.1
      - test-py3.6-dj1.11
      - test-py3.6-dj2.0
      - test-py3.5-dj2.1
      - test-py3.7-dj1.11
      - test-py3.7-dj2.0
      - test-py3.7-dj2.1
  nightly:
    triggers:
      - schedule:
          cron: "0 8 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test-py2.7-dj1.11
      - test-py3.5-dj1.11
      - test-py3.5-dj2.0
      - test-py3.5-dj2.1
      - test-py3.6-dj1.11
      - test-py3.6-dj2.0
      - test-py3.5-dj2.1
      - test-py3.7-dj1.11
      - test-py3.7-dj2.0
      - test-py3.7-dj2.1
jobs:
  test-py2.7-dj1.11: &test-python-django-template
    docker:
      - image: circleci/python:2.7
    environment:
      DJANGO_VERSION: 1.11
    working-directory: ~/django-session-cleanup
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            mkdir -p ~/venv
            if [ $(python -c "import platform; print(platform.python_version_tuple()[0])") == "2" ]; then
              virtualenv ~/venv;
            else
              python -m venv ~/venv;
            fi;
            . ~/venv/bin/activate
            pip install coverage flake8
            pip install django==${DJANGO_VERSION}
            pip install -r requirements.txt
      - run:
          name: run linting
          command: |
            . ~/venv/bin/activate
            flake8
      - run:
          name: download CodeClimate test reporter utility
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: run automated tests
          command: |
            . ~/venv/bin/activate
            ./cc-test-reporter before-build
            PYTHONWARNINGS=all coverage run --include="session_cleanup/*" runtests.py
            coverage xml
            ./cc-test-reporter format-coverage -t coverage.py -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - deploy:
          name: upload test coverage reports to CodeClimate
          command: |
            ./cc-test-reporter sum-coverage -o - -p $CIRCLE_NODE_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug -i -
      - store_artifacts:
          path: test-reports
          destination: test-reports
  test-py3.5-dj1.11:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.5
    environment:
      DJANGO_VERSION: 1.11
  test-py3.5-dj2.0:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.5
    environment:
      DJANGO_VERSION: 2.0
  test-py3.5-dj2.1:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.5
    environment:
      DJANGO_VERSION: 2.1
  test-py3.6-dj1.11:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.6
    environment:
      DJANGO_VERSION: 1.11
  test-py3.6-dj2.0:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.6
    environment:
      DJANGO_VERSION: 2.0
  test-py3.6-dj2.1:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.6
    environment:
      DJANGO_VERSION: 2.1
  test-py3.7-dj1.11:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.7
    environment:
      DJANGO_VERSION: 1.11
  test-py3.7-dj2.0:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.7
    environment:
      DJANGO_VERSION: 2.0
  test-py3.7-dj2.1:
    <<: *test-python-django-template
    docker:
      - image: circleci/python:3.7
    environment:
      DJANGO_VERSION: 2.1
